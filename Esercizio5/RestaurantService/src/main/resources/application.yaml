
spring:
  application:
    name: RESTAURANT-SERVICE
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/db2_restaurant_service?useSSL=false
    username: gian
    password: Gianluca
  jpa:
    database-platform: org.hibernate.dialect.MySQL5InnoDBDialect
    hibernate:
      ddl-auto: update
    generate-ddl: true
    show-sql: true

  mvc:
    path match:
      matching-strategy: ant_path_matcher

server:
  port: 0
  servlet:
    context-path: /api

app:
  pizza-service-url: http://localhost:8081/api/pizzas/restaurant
  rabbitmq:
    add-pizzas-routingkey: q.add-pizzas-to-restaurant
    pizzas-added-routingkey: q.pizzas-added-to-restaurant
    pizzas-added-notification: q.pizzas-added-notification


eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://localhost:8761/eureka/






#Configurazione MySql

#spring:
#  application:
#    name: RESTAURANT-SERVICE
#  datasource:
#    driver-class-name: com.mysql.cj.jdbc.Driver
#    url: jdbc:mysql://localhost:3306/db2_restaurant_service?useSSL=false
#    username: gian
#    password: Gianluca
#  jpa:
#    database-platform: org.hibernate.dialect.MySQL5InnoDBDialect
#    hibernate:
#      ddl-auto: update
#    generate-ddl: true
#    show-sql: true
#
#  mvc:
#    path match:
#      matching-strategy: ant_path_matcher
#
#server:
#  port: 8082
#  servlet:
#    context-path: /api
#



# configurazione H2
#spring:
#  application:
#    name: RESTAURANT-SERVICE
#  datasource:
#    driver-class-name: org.h2.Driver
#    url: jdbc:h2:file:~/data/RestaurantServiceDB;AUTO_SERVER=TRUE
#    username: sa
#    password: sa
#  jpa:
#    database-platform: org.hibernate.dialect.H2Dialect
#    hibernate:
#      ddl-auto: update
#  h2:
#    console:
#      enabled: true
#      settings:
#        web-allow-others: true
#  mvc:
#    pathmatch:
#      matching-strategy: ant_path_matcher
#
#server:
#  port: 8082
#  servlet:
#    context-path: /api